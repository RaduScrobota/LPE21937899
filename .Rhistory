demo()
library(tidyselect)
detach("package:tidyselect", unload = TRUE)
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
detach("package:shiny", unload = TRUE)
library(shiny)
install.packages("tidyverse","httr","janitor")
install.packages("tidyverse","httr","janitor")
no
No
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
install.packages("pacman")
alicia <- 21
# asignar varios elementos
clase_lep <- c("marta", "emilia", "pablo")
GET("https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/")
library(tidyverse , httr)
install.packages("pacman")
library(httr)
install.packages("httr")
install.packages("httr")
GET("https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/")
df <- GET("https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/")
View(df)
library(readxl)
preciosEESS_es <- read_excel("Downloads/preciosEESS_es.xls",
skip = 3)
View(preciosEESS_es)
install.packages("tidyverse","httr","janitor")
install.packages("tidyverse")
install.packages("httr")
install.packages("janitor")
heart_2020_cleaned <- read.delim("~/Desktop/DatosODII/heart_2020_cleaned.csv", row.names=1)
library(readr)
heart_2020_cleaned <- read_csv("Desktop/DatosODII/heart_2020_cleaned.csv")
View(heart_2020_cleaned)
View(heart_2020_cleaned)
df <- GET(https://www.kaggle.com/datasets/kamilpytlak/personal-key-indicators-of-heart-disease/download?datasetVersionNumber=2)
df <- GET("https://www.kaggle.com/datasets/kamilpytlak/personal-key-indicators-of-heart-disease/download?datasetVersionNumber=2")
library(tidyverse , httr)
df <- GET("https://www.kaggle.com/datasets/kamilpytlak/personal-key-indicators-of-heart-disease/download?datasetVersionNumber=2")
df_web <- httr::GET("https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/")
df_web <- httr::GET("https://www.kaggle.com/datasets/kamilpytlak/personal-key-indicators-of-heart-disease/download?datasetVersionNumber=2")
View(df_web)
df_web_ODII <- httr::GET("https://www.kaggle.com/datasets/kamilpytlak/personal-key-indicators-of-heart-disease/download?datasetVersionNumber=2")
View(df_web_ODII)
df_web_ODII <- httr::GET("https://www.kaggle.com/datasets/kamilpytlak/personal-key-indicators-of-heart-disease/download?datasetVersionNumber=2")
View(df_web_ODII)
View(heart_2020_cleaned)
View(df_web_ODII)
# asignar varios elementos
clase_lep <- c("marta", "emilia", "pablo","32")
clase_lep2 <- list("marta", "emilia", "pablo",32) # con list podemos juntar cualquier tipo de dato en el mismo vector
# asignar varios elementos
clase_lep <- c("marta", "emilia", "pablo",32) #con el 32 no funcionaria ya que deben de ser string
View(clase_lep2)
url<- "https://www.kaggle.com/datasets/kamilpytlak/personal-key-indicators-of-heart-disease/download?datasetVersionNumber=2 "
View(df_web_ODII)
df_web_ODII <- httr::GET("https://www.kaggle.com/datasets/kamilpytlak/personal-key-indicators-of-heart-disease/download?datasetVersionNumber=2")
library(tidyverse , httr)
View(preciosEESS_es)
View(df)
xml2::read_xml(df$content)
# GETTING DATA FROM INTERNET ----------------------------------------------
url_ <- "https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/"
#que hacia esto
f_raw <- jsonlite::fromJSON(url_)
View(f_raw)
#crea a partir de los datos crudos los datos con columnas
f_raw$ListaEESSPrecio %>%  glimpse()
# Glimpse = genera listado en consola  de alta potencia (como view pero mejor )
df_source <- f_raw$ListaEESSPrecio %>%  glimpse()
#usar funcion Combined (c) para que el vector de packages funcione
install.packages(c("tidyverse","httr","janitor"))
install.packages(c("tidyverse", "httr", "janitor"))
#para limpiar los nombres
janitor::clean_names(df_source) %>%  glimpse()
library(tidyverse , httr)
library(httr)
url_ <- "https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/"
df <- GET("https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/")
xml2::read_xml(df$content)
#que hacia esto
f_raw <- jsonlite::fromJSON(url_)
# Glimpse = genera listado en consola  de alta potencia (como view pero mejor )
df_source <- f_raw$ListaEESSPrecio %>%  glimpse()
#para limpiar los nombres de las columnas (quitar los `` de cada variable)
janitor::clean_names(df_source) %>%  glimpse()
#para saber que configuracion tenemos (puntos en vez de comas (1,000 en vez de 1.000), encode, idioma...)
locale()
#cambiamos las , por . en longitud y latitud
df_source %>% clean_names() %>%  type_convert(locale =  locale(decimal_mark = ",")) %>%  glimpse()
#cambiamos las , por . en longitud y latitud
df_source %>% clean_names(df_source) %>%  type_convert(locale =  locale(decimal_mark = ",")) %>%  glimpse()
#cambiamos las , por . en longitud y latitud
df_source %>% janitor::clean_names() %>%  type_convert(locale =  locale(decimal_mark = ",")) %>%  glimpse()
#lo mismo de antes pero en vez de imprimir, lo guardamos en variable
df_cambios <- df_source %>% janitor::clean_names() %>%  type_convert(locale =  locale(decimal_mark = ","))
# Clasificamos por gasolineras baratas y no baratas, como lo hacemos?
df_cambios %>% view()
#metemos en esta variable (expensive) los nombres de gasolineras caras
df %>% mutate(expensive = df_cambios$rotulo %in% c("CEPSA", "REPSOL" , "BP" , "SHELL"))
library(httr)
library(janitor)
#metemos en esta variable (expensive) los nombres de gasolineras caras
df %>% mutate(expensive = df_cambios$rotulo %in% c("CEPSA", "REPSOL" , "BP" , "SHELL"))
#metemos en esta variable (expensive) los nombres de gasolineras caras
#mutate() ---->
#df_cambios$rotulo %in% -----> busca en df_cambio, en la variable rotulo todo lo de dentro que se llame cepsa
# bp ...
df %>% mutate(expensive = df_cambios$rotulo %in% c("CEPSA", "REPSOL" , "BP" , "SHELL"))
library(tidyverse)
#metemos en esta variable (expensive) los nombres de gasolineras caras
#mutate() ---->
#df_cambios$rotulo %in% -----> busca en df_cambio, en la variable rotulo todo lo de dentro que se llame cepsa
# bp ...
df %>% mutate(expensive = df_cambios$rotulo %in% c("CEPSA", "REPSOL" , "BP" , "SHELL"))
#metemos en esta variable (expensive) los nombres de gasolineras caras
#mutate() ---->
#df_cambios$rotulo %in% -----> busca en df_cambio, en la variable rotulo todo lo de dentro que se llame cepsa
# bp ...
df %>% mutate(expensive = df_cambios$rotulo %in% c("CEPSA", "REPSOL" , "BP" , "SHELL"))
#metemos en esta variable (expensive) los nombres de gasolineras caras
#mutate() ---->
#df_cambios$rotulo %in% -----> busca en df_cambio, en la variable rotulo todo lo de dentro que se llame cepsa
# bp ...
df_cambios %>% mutate(expensive = df_cambios$rotulo %in% c("CEPSA", "REPSOL" , "BP" , "SHELL"))
#metemos en esta variable (expensive) los nombres de gasolineras caras
#mutate() ----> QUE HACE?
#df_cambios$rotulo %in% -----> busca en df_cambio, en la variable rotulo todo lo de dentro que se llame cepsa, bp ...
#definimos DF donde tenemos la variable expensive
df_low <- df_cambios %>% mutate(expensive = df_cambios$rotulo %in% c("CEPSA", "REPSOL" , "BP" , "SHELL"))
# Cual precio medio del gasoleo en las CCAA
#seleccionamos primero de que DF cogemos la info, luego lo que nos interesa con select()
# $ busca nombre de la variable en el DF
# %>%  selecciona/filtra dentro de lo que pusimos antes (dentro de df_low selecciono solo las cogidas, despues borro dentro solo de esas los nulos y agrupo dentro de idccaa)
df_low %>% select(precio_gasoleo_a, idccaa, rotulo, expensive) %>% drop_na() %>% group_by(idccaa, expensive) %>%  summarise(mean(precio_gasoleo_a)) %>% view()
#metemos en esta variable (expensive) los nombres de gasolineras caras
#mutate() ----> QUE HACE?
#df_cambios$rotulo %in% -----> busca en df_cambio, en la variable rotulo todo lo de dentro que se llame cepsa, bp ...
#definimos DF donde tenemos la variable expensive
df_low <- df_cambios %>% mutate(expensive = df_cambios$!rotulo %in% c("CEPSA", "REPSOL" , "BP" , "SHELL"))
#metemos en esta variable (expensive) los nombres de gasolineras caras
#mutate() ----> QUE HACE?
#df_cambios$rotulo %in% -----> busca en df_cambio, en la variable rotulo todo lo de dentro que se llame cepsa, bp ...
#definimos DF donde tenemos la variable expensive
df_low <- df_cambios %>% mutate(expensive = !rotulo %in% c("CEPSA", "REPSOL" , "BP" , "SHELL"))
# Cual precio medio del gasoleo en las CCAA
#seleccionamos primero de que DF cogemos la info, luego lo que nos interesa con select()
# $ busca nombre de la variable en el DF
# %>%  selecciona/filtra dentro de lo que pusimos antes (dentro de df_low selecciono solo las cogidas, despues borro dentro solo de esas los nulos y agrupo dentro de idccaa)
df_low %>% select(precio_gasoleo_a, idccaa, rotulo, expensive) %>% drop_na() %>% group_by(idccaa, expensive) %>%  summarise(mean(precio_gasoleo_a)) %>% view()
#Crear nueva columna que identifique el idccaa y ponga su nombre
df_low %>% view()
ds21937899 <- df_low
ds21937899 %>% mutate((informe = ideess %in% c())
ds21937899 %>% mutate((informe = ideess %in% c() %>%  view()
ds21937899 %>% mutate((informe = ideess %in% c())) %>%  view()
ds21937899 %>% View()
ccaa <- c("Andalucía",
"Aragón",
"Principado de Asturias",
"Illes Balears",
"Canarias",
"Cantabria",
"Castilla y León",
"Castilla-La Mancha",
"Cataluña",
"Comunitat Valenciana",
"Extremadura",
"Galicia",
"Comunidad de Madrid",
"Región de Murcia",
"Comunidad Foral de Navarra",
"País Vasco",
"La Rioja",
"Ciudad Autónoma de Ceuta",
"Ciudad Autónoma de Melilla")
idccaa <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19")
df_provincias <- data.frame(ccaa,idccaa)
ds21937899 <- merge(ds21937899,df_provincias)
ds21937899 %>% view()
View(df_low)
ds21937899(33) <- df_low
# Cual precio medio del gasoleo en las CCAA
#seleccionamos primero de que DF cogemos la info, luego lo que nos interesa con select()
# $ busca nombre de la variable en el DF
# %>%  selecciona/filtra dentro de lo que pusimos antes (dentro de df_low selecciono solo las cogidas, despues borro dentro solo de esas los nulos y agrupo dentro de idccaa)
df_low %>% select(precio_gasoleo_a, idccaa, rotulo, expensive) %>% drop_na() %>% group_by(idccaa, expensive) %>%  summarise(mean(precio_gasoleo_a)) %>% view()
ds21937899(33) <- df_low
ds21937899_33 <- df_low
ds21937899_34 <- df_low
ccaa <- c("Andalucía",
"Aragón",
"Principado de Asturias",
"Illes Balears",
"Canarias",
"Cantabria",
"Castilla y León",
"Castilla-La Mancha",
"Cataluña",
"Comunitat Valenciana",
"Extremadura",
"Galicia",
"Comunidad de Madrid",
"Región de Murcia",
"Comunidad Foral de Navarra",
"País Vasco",
"La Rioja",
"Ciudad Autónoma de Ceuta",
"Ciudad Autónoma de Melilla")
idccaa <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19")
df_provincias <- data.frame(ccaa,idccaa)
ds21937899_34 <- merge(ds21937899_34,df_provincias)
ds21937899_34 %>% view()
#usar funcion Combined (c) para que el vector de packages funcione
install.packages(c("tidyverse","httr","janitor"))
install.packages(c("tidyverse", "httr", "janitor"))
library(tidyverse)
library(httr)
library(janitor)
url_ <- "https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/"
df <- GET("https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/")
#acceder dentro
xml2::read_xml(df$content)
#que hacia esto
f_raw <- jsonlite::fromJSON(url_)
# Glimpse = genera listado en consola  de alta potencia (como view pero mejor )
df_source <- f_raw$ListaEESSPrecio %>%  glimpse()
#para limpiar los nombres de las columnas (quitar los `` de cada variable)
janitor::clean_names(df_source) %>%  glimpse()
#cambiamos las , por . en longitud y latitud y lo imprimimos por pantalla con glimpse
df_source %>% janitor::clean_names() %>%  type_convert(locale =  locale(decimal_mark = ",")) %>%  glimpse()
#lo mismo de antes pero en vez de imprimir, lo guardamos en variable
df_cambios <- df_source %>% janitor::clean_names() %>%  type_convert(locale =  locale(decimal_mark = ","))
#metemos en esta variable (expensive) los nombres de gasolineras caras
#mutate() ----> crea columna nueva
#df_cambios$rotulo %in% -----> busca en df_cambio, en la variable rotulo todo lo de dentro que se llame cepsa, bp ...
#definimos DF donde tenemos la variable expensive
df_low <- df_cambios %>% mutate(expensive = !rotulo %in% c("CEPSA", "REPSOL" , "BP" , "SHELL"))
# Cual precio medio del gasoleo en las CCAA
#seleccionamos primero de que DF cogemos la info, luego lo que nos interesa con select()
# $ busca nombre de la variable en el DF
# %>%  selecciona/filtra dentro de lo que pusimos antes (dentro de df_low selecciono solo las cogidas, despues borro dentro solo de esas los nulos y agrupo dentro de idccaa)
df_low %>% select(precio_gasoleo_a, idccaa, rotulo, expensive) %>% drop_na() %>% group_by(idccaa, expensive) %>%  summarise(mean(precio_gasoleo_a)) %>% view()
#Crear nueva columna que identifique el idccaa y ponga su nombre
df_low %>% view()
ds21937899_33 <- df_low
ds21937899_34 <- df_low
ccaa <- c("Andalucía",
"Aragón",
"Principado de Asturias",
"Illes Balears",
"Canarias",
"Cantabria",
"Castilla y León",
"Castilla-La Mancha",
"Cataluña",
"Comunitat Valenciana",
"Extremadura",
"Galicia",
"Comunidad de Madrid",
"Región de Murcia",
"Comunidad Foral de Navarra",
"País Vasco",
"La Rioja",
"Ciudad Autónoma de Ceuta",
"Ciudad Autónoma de Melilla")
idccaa <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19")
df_provincias <- data.frame(ccaa,idccaa)
ds21937899_34 <- merge(ds21937899_34,df_provincias)
ds21937899_34 %>% view()
View(ds21937899_33)
View(ds21937899_33)
View(ds21937899_33)
write.csv(ds21937899_33, "ds21937899_33.csv")
help(write.csv)
setwd("~/Desktop/Matematicas/TercerCurso/LenguajesProgramacionEstadistica")
write.csv(ds21937899_33, "ds21937899_33.csv")
write.csv(ds21937899_34, "ds21937899_34.csv")
